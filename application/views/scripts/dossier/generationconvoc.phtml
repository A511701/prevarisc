<?php

$consonne = array("a", "e", "i", "o", "u", "y", "A", "E", "I", "O", "U", "Y");

if(count($this->membresFiles) == 0){
	echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Aucun membre n'a été renseigné pour la commission</span><br/><br/><br/>";
	return false;
}

foreach($this->membresFiles as $val => $membre){

	if($membre->ID_GROUPEMENT == NULL && $membre->ID_UTILISATEURINFORMATIONS == NULL){
		//génération du document par commune pour les maires par exemple		
		//si le document concernant ce membre existe alors on rentre dans la boucle
		if($membre->COURRIER_CONVOCATIONSALLE != NULL){
			if($this->typeCommission == 1 || $this->typeCommission == 3)
			{
				//Salle
				$nomFichier = $membre->ID_COMMISSIONMEMBRE."CONVOCATIONSALLE_".$membre->COURRIER_CONVOCATIONSALLE;
			}else if($this->typeCommission == 2){
				//Visite et Groupe de visite
				$nomFichier = $membre->ID_COMMISSIONMEMBRE."CONVOCATIONVISITE_".$membre->COURRIER_CONVOCATIONVISITE;
			}
			
			$odf = new Odf(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."courriers".DIRECTORY_SEPARATOR.$nomFichier);
			//Generation du segment villeDoss 			
			$villeODF = $odf->setSegment('villeDoss');
			foreach($this->listeCommunes as $val => $commune){
				//Array des infos de la commune = 1
				$firstLetter = $commune[0]{0}; 
				if(in_array($firstLetter, $consonne)){
					$communeShow = "d'".$commune[0];
				}else{
					$communeShow = "de ".$commune[0];
				}
				//Zend_Debug::dump($commune[1]);
				if(count($commune[1]) == 1){
					foreach($commune[1] as $comm => $info){	
						addChamp($villeODF,'numMairie',$info["NUMEROADRESSE_UTILISATEURINFORMATIONS"]);
						addChamp($villeODF,'rueMairie',$info["RUEADRESSE_UTILISATEURINFORMATIONS"]);
						addChamp($villeODF,'cpMairie',$info["CPADRESSE_UTILISATEURINFORMATIONS"]);
						addChamp($villeODF,'communeMairie',$commune[0]);
					}
				}else{
					addChamp($villeODF,'numMairie','');
					addChamp($villeODF,'rueMairie','');
					addChamp($villeODF,'cpMairie','');
					addChamp($villeODF,'communeMairie','');
					echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Le contact de la commune ".$commune[0]." n'a pas été renseigné</span><br/><br/><br/>";
				}

				addChamp($villeODF,'commissionNom',$this->commissionInfos[0]['LIBELLE_COMMISSION']);
				
				$dateDuJour = new Zend_Date();
				addChamp($villeODF,'date',$dateDuJour->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
				
				$dateComm = new Zend_Date($this->dateComm);				
				addChamp($villeODF,'dateCommission',$dateComm->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
				
				addChamp($villeODF,'heureDebutComm',$this->heureDeb);
				//ICI FOREACH SUR LES DOSSIERS DE LA COMMUNE
				//Generation du segment pour l'affichage des différentes infos du dossier
				$dbDossLie = new Model_DbTable_EtablissementLie;
				foreach($this->dossierComm as $val => $dossierInfos){
					if($dossierInfos["LIBELLE_COMMUNE"] == $commune[0]){
						//On recherche le pere de l'établissement concerné
						
						
						$villeODF->infosDoss->setVars('nomEtab', $dossierInfos["LIBELLE_ETABLISSEMENTINFORMATIONS"], true, 'UTF-8');
						$villeODF->infosDoss->setVars('natureDossier', $dossierInfos["LIBELLE_DOSSIERNATURE"], true, 'UTF-8');
						$villeODF->infosDoss->setVars('objetDossier', $dossierInfos["OBJET_DOSSIER"], true, 'UTF-8');
						
						if(isset($dossierInfos["HEURE_DEB_AFFECT"])){
							$heureDebutTab = explode(":",$dossierInfos["HEURE_DEB_AFFECT"]);
							$heureDebut = $heureDebutTab[0].":".$heureDebutTab[1];
							$villeODF->infosDoss->setVars('heureDebDossier', $heureDebut, true, 'UTF-8');
						}else{
							$villeODF->infosDoss->setVars('heureDebDossier', '', true, 'UTF-8');
						}
						
						if(isset($dossierInfos["HEURE_FIN_AFFECT"])){
							$heureFinTab = explode(":",$dossierInfos["HEURE_FIN_AFFECT"]);
							$heureFin = $heureFinTab[0].":".$heureFinTab[1];
							$villeODF->infosDoss->setVars('heureFinDossier', $heureFin, true, 'UTF-8');
						}else{
							$villeODF->infosDoss->setVars('heureFinDossier', '', true, 'UTF-8');
						}
						
						$villeODF->infosDoss->setVars('numDocUrba', $dossierInfos["NUM_DOCURBA"], true, 'UTF-8');

						$villeODF->infosDoss->merge(); 
					}
				}

				$villeODF->merge();

			}
			$odf->mergeSegment($villeODF);

			$idPj = savePj($this->idComm ,$membre->LIBELLE_COMMISSIONMEMBRE);
			$odf->saveToDisk(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."pieces-jointes".DIRECTORY_SEPARATOR.$idPj.".odt");

			echo "<span id='notif' class='ui-state-highlight ui-corner-all' style='padding: 0.3em;'>La convocation pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE." à bien été généré</span><br/><br/><br/>";
		}else{
			echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Aucun document type n'a été renseigné pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE."</span><br/><br/><br/>";
		}

	}else if($membre->ID_GROUPEMENT != NULL){
		//génération du document par groupement de commune pour les gendarmerie/police par exemple
		//echo "membre de groupement ".$membre->LIBELLE_COMMISSIONMEMBRE."<br/>";
		
		if($membre->COURRIER_CONVOCATIONSALLE != NULL){
			//si le membre du groupement en question posède un document le concernant on génére la convocation

			$model_groupement = new Model_DbTable_Groupement();
			$infosGroupement = $model_groupement->get($membre->ID_GROUPEMENT);
			//Zend_Debug::dump($infosGroupement);
			
			$villeGroupement = $model_groupement->find($membre->ID_GROUPEMENT)->current();
			$listeVillesGroupement = $villeGroupement->findModel_DbTable_AdresseCommuneViaModel_DbTable_GroupementCommune()->toArray();
			
			//$ville_du_groupement = $membre->ID_GROUPEMENT->findModel_DbTable_AdresseCommuneViaModel_DbTable_GroupementCommune()->toArray();
			//Zend_Debug::dump($listeVillesGroupement);
			
			//Zend_Debug::dump($infosGroupement);
			
			
			//On commence par selectionner le document approprié
			$nomFichier = $membre->ID_COMMISSIONMEMBRE."CONVOCATIONSALLE_".$membre->COURRIER_CONVOCATIONSALLE;
			$odf = new Odf(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."courriers".DIRECTORY_SEPARATOR.$nomFichier);
			
			//Generation du segment grpLoop
			$grpLoop = $odf->setSegment('grpLoop');
			
			//Liste des champs à ajouter
			
			addChamp($grpLoop,'commissionNom',$this->commissionInfos[0]['LIBELLE_COMMISSION']);

			$dateDuJour = new Zend_Date();
			addChamp($grpLoop,'date',$dateDuJour->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
			
			addChamp($grpLoop,'communeGrp',$infosGroupement["VILLEADRESSE_UTILISATEURINFORMATIONS"]);
			addChamp($grpLoop,'numGrp',$infosGroupement["NUMEROADRESSE_UTILISATEURINFORMATIONS"]);
			addChamp($grpLoop,'rueGrp',$infosGroupement["RUEADRESSE_UTILISATEURINFORMATIONS"]);
			addChamp($grpLoop,'cpGrp',$infosGroupement["CPADRESSE_UTILISATEURINFORMATIONS"]);
			
			$dateComm = new Zend_Date($this->dateComm);

			addChamp($grpLoop,'dateCommission',$dateComm->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
			addChamp($grpLoop,'heureDebutComm',$this->heureDeb);
			
			//echo $infosGroupement["NUMEROADRESSE_UTILISATEURINFORMATIONS"];
			
			//On commence par parcourir les dossier pour récuperer la ville concernée
			//Zend_Debug::dump($this->dossierComm);
			foreach($this->dossierComm as $val => $dossierInfos){
				//On parcour la liste des ville du groupement concerné pour comparer avec la ville du dossier
				foreach($listeVillesGroupement as $var => $val){
					//Lorsque les deux correspondent, on récupère les éléments du dossier pour générer le document
					if($dossierInfos["LIBELLE_COMMUNE"] == $val['LIBELLE_COMMUNE']){
						//echo "Dossier de la ville de ".$val['LIBELLE_COMMUNE']." concerné<br/>";
						//ici on peux traiter les dossiers !
						//echo $dossierInfos["LIBELLE_ETABLISSEMENTINFORMATIONS"];
						
						$dateInsertDossier = new Zend_Date($dossierInfos["DATEINSERT_DOSSIER"]);
						$grpLoop->infosDoss->dateDe($dateInsertDossier->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
						
						$grpLoop->infosDoss->nomEtab(utf8_decode($dossierInfos["LIBELLE_ETABLISSEMENTINFORMATIONS"]));
						$grpLoop->infosDoss->natureDossier(utf8_decode($dossierInfos["LIBELLE_DOSSIERNATURE"]));
						$grpLoop->infosDoss->objetDossier(utf8_decode($dossierInfos["OBJET_DOSSIER"]));
						
						if($dossierInfos["HEURE_DEB_AFFECT"] != '')
							$grpLoop->infosDoss->heureDebut(utf8_decode($dossierInfos["HEURE_DEB_AFFECT"]));
						
						if($dossierInfos["HEURE_FIN_AFFECT"] != '')
							$grpLoop->infosDoss->heureFin(utf8_decode($dossierInfos["HEURE_FIN_AFFECT"]));
						//$grpLoop->infosDoss->numDocUrba(utf8_decode($dossierInfos["NUM_DOCURBA"]));
											
						$grpLoop->infosDoss->merge(); 
					}
						
				}
				
				
			}
			
			$grpLoop->merge();
			$odf->mergeSegment($grpLoop);
			
			$idPj = savePj($this->idComm ,$membre->LIBELLE_COMMISSIONMEMBRE);
			
			$odf->saveToDisk(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."pieces-jointes".DIRECTORY_SEPARATOR.$idPj.".odt");
			
			echo "<span id='notif' class='ui-state-highlight ui-corner-all' style='padding: 0.3em;'>La convocation pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE." à bien été généré</span><br/><br/><br/>";
		}else{
			echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Aucun document type n'a été renseigné pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE."</span><br/><br/><br/>";
			
		}		
	
	}
}

function addChamp($segment,$nomOdf, $variable){
	try{
		$segment->$nomOdf(utf8_decode($variable));
	}catch (OdfException $e) {
	
	}
}

function savePj($dateCommId, $membreNom){
	//ENREGISTEMENT DANS PIECE JOINTES
	$dateDuJour = new Zend_Date();
	$DBpieceJointe = new Model_DbTable_PieceJointe;
	$nouvellePJ = $DBpieceJointe->createRow();
	$nouvellePJ->NOM_PIECEJOINTE = "Convocation";
	$nouvellePJ->EXTENSION_PIECEJOINTE = ".odt";
	$nouvellePJ->DESCRIPTION_PIECEJOINTE = "Convocations du membre ".$membreNom." générée le ".$dateDuJour->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR." à ".Zend_Date::HOUR.":".Zend_Date::MINUTE);
	$nouvellePJ->DATE_PIECEJOINTE = $dateDuJour->get(Zend_Date::YEAR."-".Zend_Date::MONTH."-".Zend_Date::DAY." ".Zend_Date::HOUR.":".Zend_Date::MINUTE.":".Zend_Date::SECOND);
	$nouvellePJ->save();
	
	//ENREGISTREMENT DE LA PIECE JOINTE DANS DATECOMMISSIONPJ
	
	$DBsave = new Model_DbTable_DateCommissionPj;
	$linkPj = $DBsave->createRow();
	$linkPj->ID_DATECOMMISSION = $dateCommId;
	$linkPj->ID_PIECEJOINTE = $nouvellePJ->ID_PIECEJOINTE;
	$linkPj->save();
	
	return $nouvellePJ->ID_PIECEJOINTE;
}

?>