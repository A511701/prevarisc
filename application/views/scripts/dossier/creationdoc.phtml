<?php
//require_once("./vendor/cybermonde/odtphp/library/odf.php");

/*
	echo $this->infosDossier['TYPE_DOSSIER'];
	echo $this->infosDossier['TYPE_DOSSIER']." et ".$this->dossierType;

	if($this->infosDossier['TYPE_DOSSIER'] == '1'){
		//etude
		$odf = new odf("./data/uploads/documents/modele_rapport_etude.odt");
	}else{
		//visite
		$odf = new odf("./data/uploads/documents/modele_rapport_visite.odt");
	}
*/
//echo REAL_DATA_PATH.$this->fichierSelect;

function verifInfos($var){
	if($var == ''){
		return "néant";
	}else{
		return $var;
	}
}

$odf = new Odf(REAL_DATA_PATH.DIRECTORY_SEPARATOR.$this->fichierSelect);

try {
	$odf->setVars('libelle_commission',verifInfos($this->commissionInfos['LIBELLE_COMMISSION']),true,'UTF8');
} catch (OdfException $e) {

}
try {
	$odf->setVars('date_commEntete',verifInfos($this->dateCommEntete),true,'UTF8');
} catch (OdfException $e) {

}

try {
	$odf->setVars('numWinPrev',verifInfos($this->numWinPrev),true,'UTF8');
} catch (OdfException $e) {

}


// PARTIE DOC CONSULTE
	try{
		//Generation du segment ListePrescription
		$docConsulte = $odf->setSegment('listeDocs');
		foreach($this->listeDocs as $document){
			$exist = false;	
			foreach($this->dossierDocConsutle as $docExistant){
				if($docExistant['ID_DOC'] == $document['ID_DOC']){
					$exist = true;
					$ref = $docExistant['REF_CONSULTE'];
					$date = $docExistant['DATE_CONSULTE'];
				}
			}
			$docConsulte->libelledoc(utf8_decode($document['LIBELLE_DOC']));
			if($exist){
				$docConsulte->exist('X');
				$docConsulte->refdoc(utf8_decode($ref));
				$docConsulte->datedoc(utf8_decode($date));
				$docConsulte->merge();
			}
			/*
			else{
				$docConsulte->exist('', true, "ISO-8859-15");
				$docConsulte->refdoc('', true, "ISO-8859-15");
				$docConsulte->datedoc('', true, "ISO-8859-15");
			}
			*/
		}
		$odf->mergeSegment($docConsulte);
	} catch (OdfException $e) {

	}
	
	try{
		//Liste des doncuments conusltés ajoutés s'il y en à
		$listeDocAjout = $this->listeDocsAjout;
		$docAjout = $odf->setSegment('listeDocsAjout');
		foreach($this->listeDocsAjout as $documentAjout){
			$docAjout->exist('X');
			$docAjout->libelledoc(utf8_decode($documentAjout['LIBELLE_DOCAJOUT']));
			$docAjout->refdoc(utf8_decode($documentAjout['REF_DOCAJOUT']));
			$docAjout->datedoc(utf8_decode($documentAjout['DATE_DOCAJOUT']));
			$docAjout->merge();
		}
		$odf->mergeSegment($docAjout);
	} catch (OdfException $e) {

	}
	
// PARTIE PRESCRIPTION
	try{
	//Generation du segment ListePrescription
		$prescription = $odf->setSegment('listePrescription');
		for($i = 0; $i < $this->nbPrescription; $i++){
			$texte = '';
			for($t = 0; $t < count($this->listeTextes[$i]); $t++){
				if($this->listeTextes[$i][$t] != NULL){
					$texte .= $this->listeTextes[$i][$t]."\n";
					//$prescription->texte(utf8_decode($this->listeTextes[$i][$t]."\n"));
				}else if($this->listeTextes[$i][$t] == NULL && $this->listeArticles[$i][$t] != NULL){
					$texte .=  "\n";
					//$prescription->texte(utf8_decode("\n"));
				}
			}
			$prescription->texte(utf8_decode($texte));
			$article = '';
			for($a = 0; $a < count($this->listeArticles[$i]); $a++){
				
				if($this->listeArticles[$i][$a] != NULL){
					$article .= $this->listeArticles[$i][$a]."\n"; 
					//$prescription->article(utf8_decode($this->listeArticles[$i][$a]."\n"));
				}else if($this->listeArticles[$i][$a] == NULL && $this->listeTextes[$i][$a] != NULL){
					$article .= "\n"; 
					//$prescription->article(utf8_decode("\n"));
				}
			}
			$prescription->article(utf8_decode($article));
			
			$prescription->num(utf8_decode($this->listePrescription[$i]['NUM_PRESCRIPTIONDOSSIER']));
			$prescription->libelle(utf8_decode($this->ListePrescriptionsLibelle[$i]));
			$prescription->merge();
		}
		$odf->mergeSegment($prescription);	
	} catch (OdfException $e) {

	}

	//PARTIE TEXTE APPLICABLE
	try{
		$texteAppl = $odf->setSegment('texteAppl');
		foreach($this->listeTextesAppl as $texteappl){
			$texteAppl->libelleTexteAppl(utf8_decode($texteappl['LIBELLE_TEXTESAPPL']),true,'UTF8');
			$texteAppl->merge();
		}
		$odf->mergeSegment($texteAppl);	
	} catch (OdfException $e) {

	}

//GESTION DATES
	try{
		$odf->setVars('dateDepotMairie',verifInfos($this->DATEMAIRIE),true,'UTF8');
	} catch (OdfException $e) {

	}
	
	try{
		$odf->setVars('dateDepotSec',verifInfos($this->DATESECRETARIAT),true,'UTF8');
	} catch (OdfException $e) {

	}
	
	try{
		$odf->setVars('dateSDIS',verifInfos($this->DATESDIS),true,'UTF8');
	} catch (OdfException $e) {

	}
	
//INFORMATIONS CONCERNANT L'ETABLISSEMENT
try{
	$odf->setVars('etablissementLibelle',verifInfos($this->etablissementLibelle),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('typeLettreP',verifInfos($this->typeLettreP),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('activiteP',verifInfos($this->libelleActiviteP),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('typeLettreS',verifInfos($this->typeSecondaire),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('activiteS',verifInfos($this->activiteSecondaire),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('communeEtab',verifInfos($this->communeEtab),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('etablissementAdresse',verifInfos($this->etablissementAdresse),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('numDocUrba',verifInfos($this->listeDocUrba),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('categorieEtab',verifInfos($this->categorieEtab),true,'UTF8');	
} catch (OdfException $e) {

}

try{
	$odf->setVars('numPublic',verifInfos($this->numPublic),true,'UTF8');	
} catch (OdfException $e) {

}

try{
	$odf->setVars('numPersonnel',verifInfos($this->numPersonnel),true,'UTF8');		
} catch (OdfException $e) {

}

try{	
	$odf->setVars('avisDossier',verifInfos($this->avisDossier),true,'UTF8');
} catch (OdfException $e) {

}

try{
	$odf->setVars('etatDossier',verifInfos($this->etatDossier),true,'UTF8');
} catch (OdfException $e){

}

try{
	$odf->setVars('idDossier',verifInfos($this->idDossier),true,'UTF8');
} catch (OdfException $e){

}

try{
	$odf->setVars('numTelEtab',verifInfos($this->numTelEtab),true,'UTF8');
} catch (OdfException $e){

}

try{
	$odf->setVars('numFaxEtab',verifInfos($this->numFaxEtab),true,'UTF8');
} catch (OdfException $e){

}

//echo $this->idPieceJointe;
try{
	$chemin = REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."pieces-jointes".DIRECTORY_SEPARATOR.$this->idPieceJointe.".odt";
	$odf->saveToDisk($chemin);
} catch (OdfException $e) {

}

$content_dir = REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."pieces-jointes".DIRECTORY_SEPARATOR.$this->idRapportPj.'/';

//echo REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."pieces-jointes".DIRECTORY_SEPARATOR.$this->idPieceJointe.".odt";
//echo REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."pieces-jointes".DIRECTORY_SEPARATOR.$this->idRapportPj.'/';
?>